#include <iostream>
#include <cstdio>
#include <queue>
#include <cstring>
#include <cstdlib>
#include <string>
using namespace std;


struct node
{
int v,len,next;
}edge[200010];
int head[20010],visit[20010],dist[20010];
int n,m;

void SPFA(int start)
{
queue<int> Q;
for(int i=1;i<=n;i++)
{
dist[i]=99999;  visit[i]=0;
}
dist[start]=0;  visit[start]=1;
Q.push(start);
while(!Q.empty())
{
int temp=Q.front();
Q.pop();
visit[temp]=0;
for(int i=head[temp];i!=-1;i=edge[i].next)
                  if(dist[edge[i].v]>dist[temp]+edge[i].len)
                  {
                   dist[edge[i].v]=dist[temp]+edge[i].len;
                   if(!visit[edge[i].v])
                   {
              visit[edge[i].v]=1;
              Q.push(edge[i].v);
                   }
                  }
}
}
int main()
{
int u,v,len;
cin>>n>>m;
memset(head,-1,sizeof(head));
for(int i=0;i<m;i++)
{
scanf("%d%d%d",&u,&edge[i].v,&edge[i].len);
edge[i].next=head[u];
head[u]=i;
}
SPFA(1);
for(int i=2;i<=n;i++)
 cout<<dist[i]<<endl;
return 0;
}